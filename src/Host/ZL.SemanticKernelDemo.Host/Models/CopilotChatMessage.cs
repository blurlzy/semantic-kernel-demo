using System.Text.Json.Serialization;

namespace ZL.SemanticKernelDemo.Host.Models
{
    public class CopilotChatMessage
    {
        /// <summary>
        /// Timestamp of the message.
        /// </summary>
        public DateTimeOffset Timestamp { get; set; }

        /// <summary>
        /// Id of the user who sent this message.
        /// </summary>
        public string UserId { get; set; }

        /// <summary>
        /// Name of the user who sent this message.
        /// </summary>
        public string UserName { get; set; }

        /// <summary>
        /// Id of the chat this message belongs to.
        /// </summary>
        public string ChatId { get; set; }

        /// <summary>
        /// Content of the message.
        /// </summary>
        public string Content { get; set; }

        /// <summary>
        /// Id of the message.
        /// </summary>
        public string Id { get; set; }

        /// <summary>
        /// Role of the author of the message.
        /// </summary>
        public AuthorRoles AuthorRole { get; set; }

        /// <summary>
        /// Prompt used to generate the message.
        /// Will be empty if the message is not generated by a prompt.
        /// </summary>
        public string Prompt { get; set; } = string.Empty;


        /// <summary>
        /// Type of the message.
        /// </summary>
        public ChatMessageType Type { get; set; }

        /// <summary>
        /// Counts of total token usage used to generate bot response.
        /// </summary>
        public IDictionary<string, int>? TokenUsage { get; set; }

        /// <summary>
        /// The partition key for the source.
        /// </summary>
        [JsonIgnore]
        public string Partition => this.ChatId;
    }
}
